<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Basics on Pixel Craft</title>
    <link>https://pixelcraft.dev/courses/basics/</link>
    <description>Recent content in Basics on Pixel Craft</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Nov 2024 12:31:32 +0100</lastBuildDate>
    <atom:link href="https://pixelcraft.dev/courses/basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to use</title>
      <link>https://pixelcraft.dev/courses/basics/howtouse/</link>
      <pubDate>Fri, 22 Nov 2024 12:31:32 +0100</pubDate>
      <guid>https://pixelcraft.dev/courses/basics/howtouse/</guid>
      <description>&lt;p&gt;On this site I try to pass most of the knowledge using practical examples. It&amp;rsquo;s a digital book, and unlike paper books I can make pages interactive. There will be interactive code editors on most pages. I would have loved to have these tools when I started learning programming.  Try it out yourself, write any code you want and press run to see the output printed below:&lt;/p&gt;&#xA;&lt;div class=&#34;bs-component&#34;&gt;&#xA;&lt;ul id=&#34;exampletabs&#34; class=&#34;nav nav-tabs&#34; role=&#34;tabslist&#34;&gt;&#xA;&#xA;&lt;li class=&#34;nav-item&#34; data-tab=&#34;pythonexampletab&#34;&gt;&#xA;&lt;a href=&#34;#pythonexampletab&#34; class=&#34;nav-link&#34; data-bs-toggle=&#34;tab&#34;&gt;python&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&lt;li class=&#34;nav-item&#34; data-tab=&#34;cppexampletab&#34;&gt;&#xA;&lt;a href=&#34;#cppexampletab&#34; class=&#34;nav-link&#34; data-bs-toggle=&#34;tab&#34;&gt;cpp&lt;/a&gt;&#xA;&lt;/li&gt;&#xA;&#xA;&lt;/ul&gt;&#xA;&lt;div id=&#34;myTabContent&#34; class=&#34;tab-content&#34;&gt;&#xD;&#xA;&lt;div class=&#34;tab-pane fade&#34; id=&#34;pythonexampletab&#34;&gt;&#xA;&lt;textarea id=&#34;pythonexample&#34;&gt;&#xD;&#xA;print(&amp;#39;Hello world!&amp;#39;)&#xD;&#xA;data = [&amp;#39;Test&amp;#39;, 1, &amp;#39;Yellow&amp;#39;, &amp;#39;Banana&amp;#39;]&#xD;&#xA;for element in data:&#xD;&#xA;    print(element)&lt;/textarea&gt;&#xA;&lt;button id=&#34;pythonexamplebutton&#34; type=&#34;button&#34; class=&#34;btn btn-success&#34;&gt;Run&lt;/button&gt;&#xA;&lt;pre class=&#34;output&#34; id=&#34;pythonexampleoutput&#34; style=&#34;display: none;&#34;&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA; &#xD;&#xA;&lt;div class=&#34;tab-pane fade&#34; id=&#34;cppexampletab&#34;&gt;&#xA;&lt;textarea id=&#34;cppexample&#34;&gt;&#xD;&#xA;#include &amp;lt;stdio.h&amp;gt;&#xD;&#xA;&#xD;&#xA;int main()&#xD;&#xA;{&#xD;&#xA;    printf(&amp;#34;Hello world from C&amp;#43;&amp;#43;!&amp;#34;);&#xD;&#xA;}&lt;/textarea&gt;&#xA;&lt;button id=&#34;cppexamplebutton&#34; type=&#34;button&#34; class=&#34;btn btn-success&#34;&gt;Run&lt;/button&gt;&#xA;&lt;pre class=&#34;output&#34; id=&#34;cppexampleoutput&#34; style=&#34;display: none;&#34;&gt;&lt;/pre&gt;&#xA;&lt;/div&gt;&#xA;&#xD;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div id=&#34;pythonexamplediv&#34; style=&#34;display: none;&#34;&gt;&#xA;&lt;canvas id=&#34;pythonexamplecanvas&#34; height=&#34;400&#34; width=&#34;600&#34;&gt;&lt;/canvas&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div id=&#34;cppexamplediv&#34; style=&#34;display: none;&#34;&gt;&#xA;&lt;canvas id=&#34;cppexamplecanvas&#34; height=&#34;400&#34; width=&#34;600&#34;&gt;&lt;/canvas&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;script type=&#34;text/javascript&#34;&gt;&#xA;    $(document).ready(function() &#xA;    { &#xA;        $(&#39;#exampletabs a:first&#39;).tab(&#39;show&#39;)&#xA;        $(&#39;#exampletabs a&#39;).click(function (e) {&#xA;            e.preventDefault();&#xA;            $(this).tab(&#39;show&#39;);&#xA;        })&#xA;&#xA;        {&#xA;                var editor = createEditor(&#34;python&#34;, &#34;example&#34;, &#34;python&#34;);}&#xA;        {&#xA;                var editor = createEditor(&#34;cpp&#34;, &#34;example&#34;, &#34;text\/x-c\u002b\u002bsrc&#34;);}&#xA;        &#xA;    });&lt;/script&gt;&#xA;&#xA;&lt;p&gt;There are currently two supported programming languages: &lt;strong&gt;Python&lt;/strong&gt; and &lt;strong&gt;C++&lt;/strong&gt;. In game programming  &lt;strong&gt;C++&lt;/strong&gt; is the language of choice for most high quality games. This is due to the flexibility it offers to mess around with low level details such as memory management. For high level concepts I will try to use &lt;strong&gt;Python&lt;/strong&gt; more, as it&amp;rsquo;s the easier language to teach and understand general concepts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visualization tools</title>
      <link>https://pixelcraft.dev/courses/basics/visualizationtools/</link>
      <pubDate>Fri, 22 Nov 2024 12:31:32 +0100</pubDate>
      <guid>https://pixelcraft.dev/courses/basics/visualizationtools/</guid>
      <description>&lt;p&gt;Outputting text by printing something to the console is rather easy. Getting a setup to output an image is a bit more difficult, but not to worry: I&amp;rsquo;ve done all the hard work for you behind the scenes. Here we&amp;rsquo;ll introduce the tools to work with images specifically for this site.&lt;/p&gt;&#xA;&lt;p&gt;First let&amp;rsquo;s take a look at Python. We use a framework called &lt;a href=&#34;https://processing.org/&#34;&gt;processing&lt;/a&gt;. There&amp;rsquo;s a &lt;a href=&#34;https://py.processing.org/&#34;&gt;variant made for Python&lt;/a&gt; which is what we&amp;rsquo;ll use. Follow the comments along in the code editor below to see how we can draw a clear canvas:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
